---
# =============================================================================
# Horizontal Pod Autoscaler (HPA)
# =============================================================================
# 根据 CPU 和内存使用率自动扩缩容 cloudflared Pods
# Automatically scale cloudflared Pods based on CPU and memory usage
# =============================================================================

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cloudflared-hpa
  namespace: cloudflare-tunnel
  labels:
    app: cloudflared
spec:
  # -------------------------------------------------------------------------
  # 目标资源 | Target Resource
  # -------------------------------------------------------------------------
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudflared
  
  # -------------------------------------------------------------------------
  # 副本数配置 | Replica Configuration
  # -------------------------------------------------------------------------
  # 最小副本数：始终保持至少 3 个副本（高可用）
  # Minimum replicas: Always keep at least 3 replicas (high availability)
  minReplicas: 3
  
  # 最大副本数：最多扩展到 10 个副本
  # Maximum replicas: Scale up to 10 replicas maximum
  maxReplicas: 10
  
  # -------------------------------------------------------------------------
  # 扩缩容指标 | Scaling Metrics
  # -------------------------------------------------------------------------
  metrics:
    # CPU 使用率指标
    # CPU utilization metric
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          # 当平均 CPU 使用率超过 70% 时扩容
          # Scale up when average CPU usage exceeds 70%
          averageUtilization: 70
    
    # 内存使用率指标
    # Memory utilization metric
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          # 当平均内存使用率超过 80% 时扩容
          # Scale up when average memory usage exceeds 80%
          averageUtilization: 80
  
  # -------------------------------------------------------------------------
  # 扩缩容行为 | Scaling Behavior (可选)
  # -------------------------------------------------------------------------
  behavior:
    # 扩容行为
    # Scale up behavior
    scaleUp:
      # 稳定窗口：等待 60 秒后再次扩容
      # Stabilization window: Wait 60 seconds before scaling up again
      stabilizationWindowSeconds: 60
      policies:
        # 策略 1：每 60 秒最多增加 2 个 Pod
        # Policy 1: Add maximum 2 Pods per 60 seconds
        - type: Pods
          value: 2
          periodSeconds: 60
        # 策略 2：每 60 秒最多增加 50% 的当前 Pod 数
        # Policy 2: Add maximum 50% of current Pods per 60 seconds
        - type: Percent
          value: 50
          periodSeconds: 60
      # 选择策略：使用允许最大扩容的策略
      # Select policy: Use the one that allows maximum scale up
      selectPolicy: Max
    
    # 缩容行为
    # Scale down behavior
    scaleDown:
      # 稳定窗口：等待 300 秒（5 分钟）后再缩容
      # Stabilization window: Wait 300 seconds (5 minutes) before scaling down
      stabilizationWindowSeconds: 300
      policies:
        # 策略 1：每 60 秒最多减少 1 个 Pod
        # Policy 1: Remove maximum 1 Pod per 60 seconds
        - type: Pods
          value: 1
          periodSeconds: 60
      # 选择策略：使用允许最小缩容的策略（更保守）
      # Select policy: Use the one that allows minimum scale down (more conservative)
      selectPolicy: Min

# =============================================================================
# HPA 说明 | HPA Notes
# =============================================================================
#
# 1. 前置要求:
#    - Kubernetes 集群必须安装 Metrics Server
#    - 验证: kubectl top nodes
#
# 2. 部署 HPA:
#    kubectl apply -f 04-hpa.yaml
#
# 3. 查看 HPA 状态:
#    kubectl get hpa -n cloudflare-tunnel
#    kubectl describe hpa cloudflared-hpa -n cloudflare-tunnel
#
# 4. 观察扩缩容:
#    kubectl get pods -n cloudflare-tunnel -w
#
# 5. 模拟负载（测试扩容）:
#    kubectl run -it --rm load-generator --image=busybox /bin/sh
#    while true; do wget -q -O- http://your-app.anixops.com; done
#
# 6. 查看 HPA 事件:
#    kubectl get events -n cloudflare-tunnel --sort-by='.lastTimestamp'
#
# =============================================================================
