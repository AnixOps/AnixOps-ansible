---
# =============================================================================
# Cloudflare Tunnel ConfigMap
# =============================================================================
# 此 ConfigMap 包含 cloudflared 的配置文件
# This ConfigMap contains the configuration file for cloudflared
# =============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared-config
  namespace: cloudflare-tunnel
  labels:
    app: cloudflared
data:
  config.yaml: |
    # =========================================================================
    # Cloudflare Tunnel 配置文件 | Cloudflare Tunnel Configuration File
    # =========================================================================
    
    # -------------------------------------------------------------------------
    # 基础配置 | Basic Configuration
    # -------------------------------------------------------------------------
    
    # 禁用自动更新（在 Kubernetes 中由镜像版本管理）
    # Disable auto-update (managed by image version in Kubernetes)
    no-autoupdate: true
    
    # 日志级别 | Log level: debug, info, warn, error
    loglevel: info
    
    # 传输协议 | Transport protocol: auto, quic, http2
    # QUIC 提供更好的性能和弹性
    # QUIC provides better performance and resilience
    protocol: quic
    
    # Metrics 端点（用于 Prometheus 监控）
    # Metrics endpoint (for Prometheus monitoring)
    metrics: 0.0.0.0:2000
    
    # -------------------------------------------------------------------------
    # Ingress 规则 | Ingress Rules
    # -------------------------------------------------------------------------
    # 配置流量如何从 Cloudflare Edge 路由到你的服务
    # Configure how traffic is routed from Cloudflare Edge to your services
    # -------------------------------------------------------------------------
    
    ingress:
      # 规则 1: 捕获所有 *.anixops.com 的流量，转发到 Nginx Ingress Controller
      # Rule 1: Catch all *.anixops.com traffic, forward to Nginx Ingress Controller
      - hostname: "*.anixops.com"
        service: http://ingress-nginx-controller.ingress-nginx.svc.cluster.local:80
        originRequest:
          # 连接超时 | Connect timeout
          connectTimeout: 30s
          # TCP Keep-Alive 间隔 | TCP Keep-Alive interval
          tcpKeepAlive: 30s
          # 禁用 TLS 验证（因为 Ingress Controller 使用 ClusterIP）
          # Disable TLS verification (since Ingress Controller uses ClusterIP)
          noTLSVerify: false
      
      # 规则 2（可选）: 如果 Ingress Controller 启用了 HTTPS
      # Rule 2 (Optional): If Ingress Controller has HTTPS enabled
      # - hostname: "*.anixops.com"
      #   service: https://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443
      #   originRequest:
      #     originServerName: "*.anixops.com"
      #     noTLSVerify: true  # 如果使用自签名证书
      
      # 规则 3（示例）: 特定子域名路由
      # Rule 3 (Example): Specific subdomain routing
      # - hostname: api.anixops.com
      #   service: http://api-service.default.svc.cluster.local:8080
      
      # - hostname: grafana.anixops.com
      #   service: http://grafana.observability.svc.cluster.local:3000
      
      # 默认规则（必需）: 捕获所有未匹配的流量，返回 404
      # Default rule (Required): Catch all unmatched traffic, return 404
      - service: http_status:404
    
    # =========================================================================
    # 配置说明 | Configuration Notes
    # =========================================================================
    #
    # 1. hostname:
    #    - 支持通配符: *.anixops.com
    #    - 支持精确匹配: app.anixops.com
    #    - 支持多个规则，按顺序匹配
    #
    # 2. service:
    #    - HTTP:  http://service-name.namespace.svc.cluster.local:port
    #    - HTTPS: https://service-name.namespace.svc.cluster.local:port
    #    - 特殊: http_status:404 (返回 HTTP 状态码)
    #
    # 3. originRequest (可选):
    #    - connectTimeout: 连接超时时间
    #    - noTLSVerify: 是否验证 TLS 证书
    #    - originServerName: TLS SNI 名称
    #    - httpHostHeader: 自定义 Host 头
    #
    # 4. 更新配置后重启 Pod:
    #    kubectl rollout restart deployment cloudflared -n cloudflare-tunnel
    #
    # =========================================================================
