---
# =============================================================================
# Create Kubernetes Secret for Cloudflare Token
# =============================================================================

- name: Decode Cloudflare tunnel token
  ansible.builtin.set_fact:
    tunnel_creds: "{{ cloudflare_tunnel_token | b64decode | from_json }}"
  no_log: true

- name: Check if secret already exists
  ansible.builtin.command: |
    kubectl get secret {{ cloudflared_release_name }}-cloudflare-tunnel -n {{ cloudflared_namespace }}
  register: secret_check
  failed_when: false
  changed_when: false
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  become: "{{ 'yes' if k8s_provider == 'k3s' else 'no' }}"

- name: Delete existing secret (if exists)
  ansible.builtin.command: |
    kubectl delete secret {{ cloudflared_release_name }}-cloudflare-tunnel -n {{ cloudflared_namespace }}
  when: secret_check.rc == 0
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  become: "{{ 'yes' if k8s_provider == 'k3s' else 'no' }}"
  register: secret_delete
  changed_when: secret_delete.rc == 0

- name: Create credentials.json content
  ansible.builtin.set_fact:
    credentials_json: '{"AccountTag":"{{ tunnel_creds.a }}","TunnelID":"{{ tunnel_creds.t }}","TunnelSecret":"{{ tunnel_creds.s }}"}'
  no_log: true

- name: Create Cloudflare tunnel credentials secret
  ansible.builtin.shell: |
    cat << 'EOF' | kubectl apply -f - -n {{ cloudflared_namespace }}
    apiVersion: v1
    kind: Secret
    metadata:
      name: {{ cloudflared_release_name }}-cloudflare-tunnel
    type: Opaque
    stringData:
      credentials.json: |
        {"AccountTag":"{{ tunnel_creds.a }}","TunnelID":"{{ tunnel_creds.t }}","TunnelSecret":"{{ tunnel_creds.s }}"}
    EOF
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  become: "{{ 'yes' if k8s_provider == 'k3s' else 'no' }}"
  register: secret_create
  changed_when: "'created' in secret_create.stdout or 'configured' in secret_create.stdout"
  no_log: true

- name: Verify secret creation
  ansible.builtin.command: |
    kubectl get secret {{ cloudflared_release_name }}-cloudflare-tunnel -n {{ cloudflared_namespace }}
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  become: "{{ 'yes' if k8s_provider == 'k3s' else 'no' }}"
  changed_when: false

- name: Display secret status
  ansible.builtin.debug:
    msg: "âœ… Cloudflare tunnel credentials secret created successfully"
