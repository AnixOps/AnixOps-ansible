---
# Loki Server Installation Tasks

- name: Create loki system group
  group:
    name: loki
    state: present
    system: yes

- name: Create loki system user
  user:
    name: loki
    group: loki
    shell: /sbin/nologin
    system: yes
    create_home: no

- name: Create loki directories
  file:
    path: "{{ item }}"
    state: directory
    owner: loki
    group: loki
    mode: '0755'
  loop:
    - /etc/loki
    - /var/lib/loki

- name: Download and install Loki
  block:
    - name: Check if Loki is already installed
      stat:
        path: /usr/local/bin/loki
      register: loki_bin

    - name: Download Loki binary
      get_url:
        url: "https://github.com/grafana/loki/releases/download/v{{ loki.version | default('2.9.0') }}/loki-linux-amd64.zip"
        dest: /tmp/loki.zip
        mode: '0644'
      when: not loki_bin.stat.exists

    - name: Install unzip
      package:
        name: unzip
        state: present
      when: not loki_bin.stat.exists

    - name: Extract Loki
      unarchive:
        src: /tmp/loki.zip
        dest: /tmp
        remote_src: yes
      when: not loki_bin.stat.exists

    - name: Copy Loki binary
      copy:
        src: /tmp/loki-linux-amd64
        dest: /usr/local/bin/loki
        owner: loki
        group: loki
        mode: '0755'
        remote_src: yes
      when: not loki_bin.stat.exists

- name: Configure Loki
  template:
    src: loki-config.yml.j2
    dest: /etc/loki/loki-config.yml
    owner: loki
    group: loki
    mode: '0644'
  notify: restart loki

- name: Create Loki systemd service
  template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
    mode: '0644'
  notify: restart loki

- name: Enable and start Loki service
  systemd:
    name: loki
    state: started
    enabled: yes
    daemon_reload: yes

- name: Display Loki info
  debug:
    msg: |
      Loki installed successfully
      Access: http://{{ ansible_host }}:3100
      Config: /etc/loki/loki-config.yml
      Data: /var/lib/loki
