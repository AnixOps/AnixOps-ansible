---
# ACME SSL Certificate Role Tasks
# 使用 acme.sh 获取和管理 SSL 证书

- name: Install dependencies for acme.sh
  apt:
    name:
      - curl
      - socat
      - openssl
      - cron
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Check if acme.sh is already installed
  stat:
    path: /root/.acme.sh/acme.sh
  register: acme_installed

- name: Download and install acme.sh
  shell: |
    curl https://get.acme.sh | sh -s email={{ acme_email }}
  args:
    creates: /root/.acme.sh/acme.sh
  when: not acme_installed.stat.exists

- name: Configure Cloudflare DNS API (if using Cloudflare)
  lineinfile:
    path: /root/.acme.sh/account.conf
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}='{{ item.value }}'"
    create: yes
  loop:
    - { key: 'CF_Token', value: '{{ cloudflare_api_token }}' }
    - { key: 'CF_Zone_ID', value: '{{ cloudflare_zone_id }}' }
  when: 
    - acme_dns_provider == 'cloudflare'
    - cloudflare_api_token is defined
    - cloudflare_zone_id is defined
  no_log: true

- name: Issue SSL certificate
  shell: |
    /root/.acme.sh/acme.sh --issue \
      --dns dns_cf \
      -d {{ item }} \
      --force
  args:
    creates: /root/.acme.sh/{{ item }}_ecc/{{ item }}.cer
  loop: "{{ acme_domains }}"
  when: 
    - acme_dns_provider == 'cloudflare'
    - acme_domains is defined
  register: acme_issue
  failed_when: 
    - acme_issue.rc != 0
    - "'Cert success' not in acme_issue.stdout"
  ignore_errors: yes

- name: Create SSL certificate directory
  file:
    path: /etc/nginx/ssl
    state: directory
    mode: '0700'
    owner: root
    group: root

- name: Install SSL certificates to Nginx
  shell: |
    /root/.acme.sh/acme.sh --install-cert -d {{ item }} \
      --key-file /etc/nginx/ssl/{{ item }}.key \
      --fullchain-file /etc/nginx/ssl/{{ item }}.crt \
      --reloadcmd "systemctl reload nginx"
  loop: "{{ acme_domains }}"
  when: acme_domains is defined
  notify: reload nginx

- name: Set up auto-renewal cron job
  cron:
    name: "acme.sh auto-renewal"
    minute: "0"
    hour: "0"
    job: "/root/.acme.sh/acme.sh --cron --home /root/.acme.sh > /dev/null"
    state: present
