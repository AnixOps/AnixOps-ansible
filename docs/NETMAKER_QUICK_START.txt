╔═══════════════════════════════════════════════════════════════════════════╗
║                                                                           ║
║              🚀 Netmaker 客户端部署 - 快速参考卡片                        ║
║              Netmaker Client Deployment - Quick Reference Card            ║
║                                                                           ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌───────────────────────────────────────────────────────────────────────────┐
│ 📦 3 步快速部署 | 3-Step Quick Deployment                                 │
└───────────────────────────────────────────────────────────────────────────┘

  1️⃣  配置变量 | Configure Variables
      vi inventory/group_vars/netmaker_clients.yml
      # 填入你的 Netmaker Access Key

  2️⃣  加密敏感信息 | Encrypt Sensitive Data
      ansible-vault encrypt inventory/group_vars/netmaker_clients.yml

  3️⃣  部署 | Deploy
      ./scripts/deploy_netmaker_clients.sh

┌───────────────────────────────────────────────────────────────────────────┐
│ 🎯 常用命令 | Common Commands                                             │
└───────────────────────────────────────────────────────────────────────────┘

  部署脚本 | Deployment Script
  ────────────────────────────────────────────────────────────────────────
  ./scripts/deploy_netmaker_clients.sh              # 标准部署
  ./scripts/deploy_netmaker_clients.sh --limit de-1 # 特定主机
  ./scripts/deploy_netmaker_clients.sh --check      # 检查模式
  ./scripts/deploy_netmaker_clients.sh -h           # 显示帮助

  Playbook 直接执行 | Direct Playbook Execution
  ────────────────────────────────────────────────────────────────────────
  ansible-playbook playbooks/netmaker/deploy_netclient.yml --ask-vault-pass
  ansible-playbook playbooks/netmaker/deploy_netclient.yml --limit de-1
  ansible-playbook playbooks/netmaker/deploy_netclient.yml --check

  Vault 管理 | Vault Management
  ────────────────────────────────────────────────────────────────────────
  ansible-vault encrypt inventory/group_vars/netmaker_clients.yml
  ansible-vault edit inventory/group_vars/netmaker_clients.yml
  ansible-vault view inventory/group_vars/netmaker_clients.yml

  验证部署 | Verify Deployment
  ────────────────────────────────────────────────────────────────────────
  ansible netmaker_clients -m ping
  ansible netmaker_clients -m shell -a "netclient list"
  ansible netmaker_clients -m shell -a "systemctl status netclient"

┌───────────────────────────────────────────────────────────────────────────┐
│ ⚙️  配置文件位置 | Configuration File Locations                           │
└───────────────────────────────────────────────────────────────────────────┘

  主机清单 | Inventory
      inventory/hosts.yml                    # netmaker_clients 组定义

  变量配置 | Variables
      inventory/group_vars/netmaker_clients.yml            # 主配置
      inventory/group_vars/netmaker_clients.yml.vault_example  # 示例

  Role 文件 | Role Files
      roles/netmaker_client/tasks/main.yml       # 任务逻辑
      roles/netmaker_client/defaults/main.yml    # 默认变量

  Playbook
      playbooks/netmaker/deploy_netclient.yml    # 主 Playbook

  脚本 | Scripts
      scripts/deploy_netmaker_clients.sh         # 部署脚本

┌───────────────────────────────────────────────────────────────────────────┐
│ 📋 必需变量 | Required Variables                                          │
└───────────────────────────────────────────────────────────────────────────┘

  在 inventory/group_vars/netmaker_clients.yml 中配置:

  netmaker_server_host: "{{ lookup('env', 'PL_1_V4_SSH') }}"
      ↳ Netmaker 服务器地址（PL-1）

  netmaker_access_key: "YOUR_ACCESS_KEY_HERE"
      ↳ 从 Netmaker UI 生成的访问密钥
      ⚠️  必须加密！Use ansible-vault encrypt!

  netmaker_network_name: "anixops-mesh"
      ↳ 要加入的网络名称

┌───────────────────────────────────────────────────────────────────────────┐
│ 🎭 目标主机 | Target Hosts (in netmaker_clients group)                   │
└───────────────────────────────────────────────────────────────────────────┘

  • de-1   - 德国 | Germany
  • jp-1   - 日本 | Japan
  • uk-1   - 英国 | United Kingdom
  • sg-1   - 新加坡 | Singapore

  Netmaker 服务器: pl-1 (波兰 | Poland)

┌───────────────────────────────────────────────────────────────────────────┐
│ 🔐 安全提醒 | Security Reminders                                          │
└───────────────────────────────────────────────────────────────────────────┘

  ✅ 总是加密 Access Key
     Always encrypt the Access Key

  ✅ 使用有限次数的密钥
     Use limited-use keys in Netmaker UI

  ✅ 定期轮换密钥 (每 90 天)
     Rotate keys regularly (every 90 days)

  ✅ 不要提交未加密的配置到 Git
     Never commit unencrypted configs to Git

┌───────────────────────────────────────────────────────────────────────────┐
│ 📚 文档资源 | Documentation Resources                                     │
└───────────────────────────────────────────────────────────────────────────┘

  本地文档 | Local Docs
  ────────────────────────────────────────────────────────────────────────
  roles/netmaker_client/README.md          # Role 详细文档
  docs/NETMAKER_QUICK_REF.md               # 快速参考指南
  docs/NETMAKER_DEPLOYMENT_SUMMARY.md      # 部署总结
  playbooks/netmaker/README.md             # Playbook 说明

  在线文档 | Online Docs
  ────────────────────────────────────────────────────────────────────────
  https://docs.netmaker.io/                # Netmaker 官方文档
  https://docs.netmaker.io/netclient.html  # netclient CLI 参考

┌───────────────────────────────────────────────────────────────────────────┐
│ 🔍 故障排查速查 | Troubleshooting Quick Check                             │
└───────────────────────────────────────────────────────────────────────────┘

  问题: 无法连接主机
  解决: ansible netmaker_clients -m ping -vvv

  问题: netclient 未安装
  解决: ansible netmaker_clients -m shell -a "which netclient"

  问题: 无法加入网络
  检查: 
    • Access Key 是否有效？
    • 网络名称是否正确？
    • Netmaker 服务器是否可访问？
    ansible netmaker_clients -m shell -a "ping -c 4 {{ netmaker_server_host }}"

  问题: 服务无法启动
  查看日志: 
    ansible netmaker_clients -m shell -a "journalctl -u netclient -n 50"

┌───────────────────────────────────────────────────────────────────────────┐
│ 💡 高级用法 | Advanced Usage                                              │
└───────────────────────────────────────────────────────────────────────────┘

  不同环境部署 | Deploy to Different Environments
  ────────────────────────────────────────────────────────────────────────
  ./scripts/deploy_netmaker_clients.sh --env dev
  ./scripts/deploy_netmaker_clients.sh --env prod

  限制到特定主机组 | Limit to Specific Host Groups
  ────────────────────────────────────────────────────────────────────────
  ansible-playbook playbooks/netmaker/deploy_netclient.yml \
    --limit web_servers

  仅验证状态 | Verify Only
  ────────────────────────────────────────────────────────────────────────
  ansible-playbook playbooks/netmaker/deploy_netclient.yml \
    --tags verify

  详细输出 | Verbose Output
  ────────────────────────────────────────────────────────────────────────
  ./scripts/deploy_netmaker_clients.sh -vvv

╔═══════════════════════════════════════════════════════════════════════════╗
║                      ✅ 部署完成检查清单                                   ║
║                      Deployment Completion Checklist                       ║
╠═══════════════════════════════════════════════════════════════════════════╣
║                                                                           ║
║  [ ] 1. 从 Netmaker UI 获取 Access Key                                    ║
║  [ ] 2. 配置 inventory/group_vars/netmaker_clients.yml                    ║
║  [ ] 3. 使用 ansible-vault 加密配置文件                                   ║
║  [ ] 4. 运行部署（脚本或 playbook）                                        ║
║  [ ] 5. 验证所有节点已加入网络 (netclient list)                           ║
║  [ ] 6. 检查 WireGuard 接口状态 (wg show)                                 ║
║  [ ] 7. 验证服务自启动已启用 (systemctl status netclient)                 ║
║  [ ] 8. 测试节点间网络连通性                                              ║
║                                                                           ║
╚═══════════════════════════════════════════════════════════════════════════╝

提示: 使用 cat docs/NETMAKER_QUICK_START.txt 查看此参考卡片
Tip: Use cat docs/NETMAKER_QUICK_START.txt to view this reference card

创建时间 | Created: 2025-10-29
维护者 | Maintainer: AnixOps Team
