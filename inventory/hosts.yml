# =============================================================================
# Ansible 主机清单 | Ansible Inventory
# =============================================================================
# 此文件定义所有受管服务器的连接信息
# This file defines connection information for all managed servers
#
# 说明 | Notes:
#   - 服务器 IP 从环境变量读取 | Server IPs are read from environment variables
#   - 本地使用: 复制 .env.example 到 .env 并配置
#     Local use: Copy .env.example to .env and configure
#   - GitHub Actions: 设置为 repository secrets
#     GitHub Actions: Set as repository secrets
# =============================================================================

all:
  children:
    
    # -------------------------------------------------------------------------
    # Web 服务器组 | Web Servers Group
    # -------------------------------------------------------------------------
    # 用于部署 Web 应用和静态资源服务
    # Used for deploying web applications and static resource services
    web_servers:
      hosts:
        de-1:
          ansible_host: "{{ lookup('env', 'DE_1_V4_SSH') }}"
        jp-1:
          ansible_host: "{{ lookup('env', 'JP_1_V4_SSH') }}"
        uk-1:
          ansible_host: "{{ lookup('env', 'UK_1_V4_SSH') }}"
        us-w-1:
          ansible_host: "{{ lookup('env', 'US_W_1_V4_SSH') }}"
      vars:
        server_role: web
    
    # -------------------------------------------------------------------------
    # Proxy 服务器组 | Proxy Servers Group
    # -------------------------------------------------------------------------
    # 部署 PLG Stack (Prometheus + Loki + Grafana)
    # Deploying PLG Stack (Prometheus + Loki + Grafana)
    proxy_servers:
      hosts:
        sg-1:
          ansible_host: "{{ lookup('env', 'SG_1_V4_SSH') }}"
        jp-2:
          ansible_host: "{{ lookup('env', 'JP_2_V4_SSH') }}"
        hk-1:
          ansible_host: "{{ lookup('env', 'HK_1_V4_SSH') }}"
        uk-2:
          ansible_host: "{{ lookup('env', 'UK_2_V4_SSH') }}"
      vars:
        server_role: proxy
    
    # -------------------------------------------------------------------------
    # 开发服务器组 | Development Servers Group
    # -------------------------------------------------------------------------
    # 用于开发和测试环境 | Used for development and testing environments
    dev_servers:
      hosts:
        de-1:
          ansible_host: "{{ lookup('env', 'DE_1_V4_SSH') }}"
      vars:
        server_role: development
    
    # -------------------------------------------------------------------------
    # Headscale 服务器组 | Headscale Server Group
    # -------------------------------------------------------------------------
    # Headscale 控制服务器（开源 Tailscale 协调服务器）
    # Headscale control server (open-source Tailscale coordination server)
    headscale_server:
      hosts:
        pl-1:
          ansible_host: "{{ lookup('env', 'PL_1_V4_SSH') }}"
      vars:
        server_role: headscale_server
    
    # -------------------------------------------------------------------------
    # Headscale 客户端组 | Headscale Clients Group
    # -------------------------------------------------------------------------
    # 加入 Headscale 网络的客户端节点（通过 Tailscale 客户端）
    # Client nodes joining Headscale network (via Tailscale client)
    # Headscale 服务器部署在 PL-1 上 | Headscale server deployed on PL-1
    headscale_clients:
      hosts:
        de-1:
          ansible_host: "{{ lookup('env', 'DE_1_V4_SSH') }}"
        jp-1:
          ansible_host: "{{ lookup('env', 'JP_1_V4_SSH') }}"
        uk-1:
          ansible_host: "{{ lookup('env', 'UK_1_V4_SSH') }}"
        sg-1:
          ansible_host: "{{ lookup('env', 'SG_1_V4_SSH') }}"
      vars:
        server_role: headscale_client
    
    # -------------------------------------------------------------------------
    # Netmaker 客户端组（已弃用）| Netmaker Clients Group (Deprecated)
    # -------------------------------------------------------------------------
    # 注意：已迁移到 Headscale | Note: Migrated to Headscale
    # 加入 Netmaker 网络的客户端节点 | Client nodes joining Netmaker network
    # Netmaker 服务器部署在 PL-1 上 | Netmaker server deployed on PL-1
    # netmaker_clients:
    #   hosts:
    #     de-1:
    #       ansible_host: "{{ lookup('env', 'DE_1_V4_SSH') }}"
    #     jp-1:
    #       ansible_host: "{{ lookup('env', 'JP_1_V4_SSH') }}"
    #     uk-1:
    #       ansible_host: "{{ lookup('env', 'UK_1_V4_SSH') }}"
    #     sg-1:
    #       ansible_host: "{{ lookup('env', 'SG_1_V4_SSH') }}"
    #   vars:
    #     server_role: netmaker_client
    
    # -------------------------------------------------------------------------
    # 可观测性服务器组 | Observability Servers Group
    # -------------------------------------------------------------------------
    # 中央监控和日志系统 (Prometheus + Loki + Grafana)
    # Central monitoring and logging system (Prometheus + Loki + Grafana)
    observability:
      hosts:
        pl-1:
          ansible_host: "{{ lookup('env', 'PL_1_V4_SSH') }}"
      vars:
        server_role: observability
    
    # -------------------------------------------------------------------------
    # Kubernetes 控制面板服务器组 | K8s Control Plane Servers Group
    # -------------------------------------------------------------------------
    # Kubernetes 控制面板反向代理 (Dashboard + API + Metrics)
    # Kubernetes control plane reverse proxy (Dashboard + API + Metrics)
    k8s_control_plane:
      hosts:
        pl-1:
          ansible_host: "{{ lookup('env', 'PL_1_V4_SSH') }}"
      vars:
        server_role: k8s_control
    
    # -------------------------------------------------------------------------
    # Kubernetes 集群服务器组 | Kubernetes Cluster Servers Group
    # -------------------------------------------------------------------------
    # Kubernetes 控制平面和工作节点 | Kubernetes control plane and worker nodes
    k8s_servers:
      hosts:
        fr-1:
          ansible_host: "{{ lookup('env', 'PL_1_V4_SSH') }}"
          k8s_role: master
      vars:
        server_role: kubernetes
    
    # -------------------------------------------------------------------------
    # K8s 测试服务器组 | K8s Test Servers Group
    # -------------------------------------------------------------------------
    # 用于 K8s 远程部署测试 (使用 K3s) | For K8s remote deployment testing (using K3s)
    k8s_test:
      hosts:
        pl-1:
          ansible_host: "{{ lookup('env', 'PL_1_V4_SSH') }}"
          k8s_role: master
          k8s_provider: k3s
          # K3s 配置
          k3s_version: v1.27.3+k3s1
          k3s_server_args: "--disable traefik --disable servicelb --write-kubeconfig-mode 644"
          kubeconfig_remote_path: /etc/rancher/k3s/k3s.yaml
          kubeconfig_local_path: /tmp/k3s-pl-1-kubeconfig.yaml
          cluster_name: k3s-test-pl1
          # 使用远程服务器上的 kubeconfig 路径进行验证
          kubeconfig_path: /etc/rancher/k3s/k3s.yaml
      vars:
        server_role: k8s_test
    
    # -------------------------------------------------------------------------
    # 应用部署目标组 | Application Deployment Targets
    # -------------------------------------------------------------------------
    # 用于定义应用部署的目标集群 | Used to define target clusters for app deployment
    
    # Nginx 测试部署 | Nginx Test Deployment
    nginx_test:
      hosts:
        pl-1:
          ansible_host: "{{ lookup('env', 'PL_1_V4_SSH') }}"
          deployment_type: remote_k3s
      vars:
        # 部署配置 | Deployment Configuration
        app_name: nginx-test
        app_namespace: nginx-test
        kubeconfig_path: /tmp/k3s-pl-1-kubeconfig.yaml
        cluster_endpoint: "{{ lookup('env', 'PL_1_V4_SSH') }}"
        app_manifest_path: k8s_manifests/nginx-test

  # ===========================================================================
  # 全局变量 | Global Variables
  # ===========================================================================
  # 应用于所有主机的通用变量
  # Common variables applied to all hosts
  vars:
    # SSH 连接配置 | SSH Connection Configuration
    ansible_user: "{{ lookup('env', 'ANSIBLE_USER') | default('root', true) }}"
    ansible_port: "{{ lookup('env', 'ANSIBLE_PORT') | default('22', true) | int }}"
    ansible_ssh_private_key_file: "{{ lookup('env', 'SSH_KEY_PATH') | default('~/.ssh/id_rsa', true) }}"
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    
    # -------------------------------------------------------------------------
    # 服务器别名配置 | Server Aliases Configuration
    # -------------------------------------------------------------------------
    # 用于在 Prometheus/Grafana/Loki 中显示友好的服务器名称
    # Used to display friendly server names in Prometheus/Grafana/Loki
    # 数据源：inventory/server_aliases.yml
    # Source: inventory/server_aliases.yml
    server_aliases:
      
      # Web 服务器 | Web Servers
      de-1:
        alias: "德国-测试-1 | Germany-Test-1"
        description: "德国 Web 服务器 - 测试环境 - NubeCloud | Germany Web Server - Test - NubeCloud"
        location: "Germany"
        server_environment: "test"
        
      jp-1:
        alias: "日本-1 | Japan-1"
        description: "日本 Web 服务器 - 测试环境 - Oracle | Japan Web Server - Test - Oracle"
        location: "Japan"
        server_environment: "test"

      uk-1:
        alias: "英国-1 | UK-1"
        description: "英国 Web 服务器 - 测试环境 - Oracle | UK Web Server - Test - Oracle"
        location: "United Kingdom"
        server_environment: "test"

      us-w-1:
        alias: "美国西-1 | US-West-1"
        description: "美国西 Web 服务器 - PLG Stack - Oracle | US West Web Server - PLG Stack - Oracle"
        location: "United States"
        server_environment: "production"
        
      # Proxy 服务器 | Proxy Servers
      sg-1:
        alias: "新加坡-1 | Singapore-1"
        description: "新加坡 Proxy 服务器 - PLG Stack - Aliyun | Singapore Proxy Server - PLG Stack - Aliyun"
        location: "Singapore"
        server_environment: "production"

      jp-2:
        alias: "日本-2 | Japan-2"
        description: "日本 Proxy 服务器 - PLG Stack - Churros | Japan Proxy Server - PLG Stack - Churros"
        location: "Japan"
        server_environment: "production"
        
      hk-1:
        alias: "香港-1 | Hong Kong-1"
        description: "香港 Proxy 服务器 - PLG Stack - Zouter | Hong Kong Proxy Server - PLG Stack - Zouter"
        location: "Hong Kong"
        server_environment: "production"

      uk-2:
        alias: "英国-2 | UK-2"
        description: "英国 Proxy 服务器 - PLG Stack - Akko | UK Proxy Server - PLG Stack - Akko"
        location: "United Kingdom"
        server_environment: "production"

      # 开发服务器 | Development Servers
      fr-1:
        alias: "法国-1 | France-1"
        description: "法国 Development 服务器 - DEV - OVH | France Development Server - DEV - OVH"
        location: "France"
        server_environment: "development"

      # 可观测性服务器 | Observability Servers
      pl-1:
        alias: "波兰-1 | Poland-1"
        description: "波兰 Observability 服务器 - PLG Stack - OVH | Poland Observability Server - PLG Stack - OVH"
        location: "Poland"
        server_environment: "production"
