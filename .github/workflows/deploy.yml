name: Deploy to Production

on:
  push:
    branches: [ deploy ]
  workflow_dispatch:
    inputs:
      target:
        description: 'Target hosts (all, web_servers, observability)'
        required: true
        default: 'all'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Ansible Configuration
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Create dynamic inventory from secrets
        run: |
          echo "Creating dynamic inventory from GitHub Secrets..."
          cat > inventory/hosts.yml << 'EOF'
          ---
          all:
            children:
              web_servers:
                hosts:
                  de-test-1:
                    ansible_host: "${{ secrets.DE_1_V4_SSH }}"
                  pl-test-1:
                    ansible_host: "${{ secrets.PL_1_V4_SSH }}"
                vars:
                  server_role: web
              
              observability:
                hosts:
                  pl-test-1:
                    ansible_host: "${{ secrets.PL_1_V4_SSH }}"
                vars:
                  server_role: observability
            
            vars:
              ansible_user: "${{ secrets.ANSIBLE_USER }}"
              ansible_port: "${{ secrets.ANSIBLE_PORT }}"
              ansible_ssh_private_key_file: "~/.ssh/id_rsa"
              ansible_python_interpreter: /usr/bin/python3
              ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
          EOF
          
          echo "Generated inventory:"
          cat inventory/hosts.yml

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          DE_1_V4_SSH: ${{ secrets.DE_1_V4_SSH }}
          PL_1_V4_SSH: ${{ secrets.PL_1_V4_SSH }}
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
          ANSIBLE_PORT: ${{ secrets.ANSIBLE_PORT }}
          SSH_KEY_PATH: ~/.ssh/id_rsa
          PROMETHEUS_URL: ${{ secrets.PROMETHEUS_URL }}
          LOKI_URL: ${{ secrets.LOKI_URL }}
          GRAFANA_URL: ${{ secrets.GRAFANA_URL }}
        run: |
          ansible-playbook -i inventory/hosts.yml playbooks/site.yml \
            --limit ${{ github.event.inputs.target || 'all' }} \
            -v

      - name: Deployment Summary
        if: success()
        run: |
          echo "═══════════════════════════════════════════════════════════"
          echo "✓ Deployment completed successfully!"
          echo "═══════════════════════════════════════════════════════════"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref }}"
          echo "Target: ${{ github.event.inputs.target || 'all' }}"
          echo "═══════════════════════════════════════════════════════════"

      - name: Notify on failure
        if: failure()
        run: |
          echo "✗ Deployment failed!"
          echo "Check the logs above for details."
