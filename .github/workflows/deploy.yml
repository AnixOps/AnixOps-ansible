name: Deploy to Production

on:
  push:
    branches: [ deploy ]
  workflow_dispatch:
    inputs:
      target:
        description: 'Target hosts (all, web_servers, app_servers)'
        required: true
        default: 'all'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Ansible Configuration
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts || true

      - name: Create inventory from secrets
        run: |
          # This is a placeholder - adjust based on your GitHub Secrets structure
          echo "Creating dynamic inventory from GitHub Secrets..."
          # You can use secrets to generate hosts.yml dynamically

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
          SSH_KEY_PATH: ~/.ssh/id_rsa
          PROMETHEUS_URL: ${{ secrets.PROMETHEUS_URL }}
          LOKI_URL: ${{ secrets.LOKI_URL }}
          GRAFANA_URL: ${{ secrets.GRAFANA_URL }}
        run: |
          ansible-playbook -i inventory/hosts.yml playbooks/site.yml \
            --limit ${{ github.event.inputs.target || 'all' }} \
            -v

      - name: Deployment Summary
        if: success()
        run: |
          echo "═══════════════════════════════════════════════════════════"
          echo "✓ Deployment completed successfully!"
          echo "═══════════════════════════════════════════════════════════"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref }}"
          echo "Target: ${{ github.event.inputs.target || 'all' }}"
          echo "═══════════════════════════════════════════════════════════"

      - name: Notify on failure
        if: failure()
        run: |
          echo "✗ Deployment failed!"
          echo "Check the logs above for details."
