name: Ansible Deploy

on:
  workflow_dispatch:
    inputs:
      playbook:
        description: 'Select playbook'
        required: true
        type: choice
        options:
          - quick-setup.yml
          - site.yml
          - web-servers.yml
          - observability.yml
        default: 'quick-setup.yml'
      
      target_group:
        description: 'Target servers'
        required: true
        type: choice
        options:
          - all
          - web_servers
          - observability
          - dev
          - prod
        default: 'dev'
      
      dry_run:
        description: 'Test only (no changes)'
        required: false
        type: boolean
        default: true

jobs:
  deploy:
    name: Deploy (${{ github.event.inputs.target_group }})
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Ansible and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Add SSH fingerprints to known_hosts (optional)
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Create inventory from config
        run: |
          echo "Generating inventory from servers-config.yml..."
          python3 tools/generate_inventory.py github-actions > inventory/hosts.yml
          
          echo "✓ Inventory generated successfully"
          echo ""
          echo "Generated inventory:"
          cat inventory/hosts.yml

      - name: Display Deployment Configuration
        run: |
          echo "═══════════════════════════════════════════════════════════════"
          echo "🚀 DEPLOYMENT CONFIGURATION"
          echo "═══════════════════════════════════════════════════════════════"
          echo "Playbook:        ${{ github.event.inputs.playbook }}"
          echo "Target Group:    ${{ github.event.inputs.target_group }}"
          echo "Dry Run:         ${{ github.event.inputs.dry_run }}"
          echo "───────────────────────────────────────────────────────────────"
          echo "Triggered by:    ${{ github.actor }}"
          echo "Branch:          ${{ github.ref_name }}"
          echo "═══════════════════════════════════════════════════════════════"

      - name: Verify Connectivity
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
        run: |
          echo "🔍 Verifying connectivity to target servers..."
          ansible ${{ github.event.inputs.target_group }} \
            -i inventory/hosts.yml \
            -m ping \
            --one-line

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          ANSIBLE_FORCE_COLOR: 'True'
        run: |
          # Build command
          CMD="ansible-playbook playbooks/${{ github.event.inputs.playbook }}"
          CMD="$CMD -i inventory/hosts.yml"
          CMD="$CMD --limit ${{ github.event.inputs.target_group }}"
          CMD="$CMD -v"
          
          # Add dry-run flag if enabled
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            CMD="$CMD --check --diff"
            echo "⚠️  Running in DRY RUN mode (no changes will be made)"
          fi
          
          echo "═══════════════════════════════════════════════════════════════"
          echo "🎯 Executing: $CMD"
          echo "═══════════════════════════════════════════════════════════════"
          
          # Execute
          eval $CMD

      - name: Run Health Check
        if: success() && github.event.inputs.dry_run != 'true'
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
        run: |
          echo "═══════════════════════════════════════════════════════════════"
          echo "🏥 Running Post-Deployment Health Check"
          echo "═══════════════════════════════════════════════════════════════"
          
          ansible ${{ github.event.inputs.target_group }} \
            -i inventory/hosts.yml \
            -m shell \
            -a "uptime && df -h / && free -h" \
            --one-line || true

      - name: Deployment Summary
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            STATUS_EMOJI="✅"
            STATUS_TEXT="SUCCESS"
          else
            STATUS_EMOJI="❌"
            STATUS_TEXT="FAILED"
          fi
          
          echo "═══════════════════════════════════════════════════════════════"
          echo "$STATUS_EMOJI DEPLOYMENT $STATUS_TEXT"
          echo "═══════════════════════════════════════════════════════════════"
          echo "Playbook:        ${{ github.event.inputs.playbook }}"
          echo "Target:          ${{ github.event.inputs.target_group }}"
          echo "Dry Run:         ${{ github.event.inputs.dry_run }}"
          echo "───────────────────────────────────────────────────────────────"
          echo "Completed at:    $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "═══════════════════════════════════════════════════════════════"

      - name: Notify on Failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          echo "Playbook: ${{ github.event.inputs.playbook }}"
          echo "Target: ${{ github.event.inputs.target_group }}"
          echo "Check the logs above for details."
