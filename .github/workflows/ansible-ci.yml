name: Ansible CI/CD Pipeline

on:
  push:
    branches: [ deploy, develop, main ]
  pull_request:
    branches: [ deploy, main ]
  workflow_dispatch:

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ansible ansible-lint yamllint
        
    - name: Run yamllint
      run: |
        yamllint -c .yamllint.yml .
      continue-on-error: true
        
    - name: Run ansible-lint
      run: |
        ansible-lint --force-color playbooks/*.yml roles/*/tasks/*.yml
      continue-on-error: true
        
    - name: Validate Ansible syntax
      run: |
        ansible-playbook --syntax-check playbooks/site.yml
        ansible-playbook --syntax-check playbooks/quick-setup.yml
        ansible-playbook --syntax-check playbooks/web-servers.yml

    - name: Lint Summary
      if: always()
      run: |
        echo "════════════════════════════════════════════"
        echo "✓ Code Quality Check Completed"
        echo "════════════════════════════════════════════"

  test:
    name: Ansible Dry Run Test
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ansible
    
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      
    - name: Create test inventory
      run: |
        cat > inventory/hosts.yml << 'EOF'
        ---
        all:
          children:
            web_servers:
              hosts:
                test-server:
                  ansible_host: "${{ secrets.DE_1_V4_SSH }}"
              vars:
                server_role: web
          vars:
            ansible_user: "${{ secrets.ANSIBLE_USER }}"
            ansible_port: "${{ secrets.ANSIBLE_PORT }}"
            ansible_ssh_private_key_file: "~/.ssh/id_rsa"
            ansible_python_interpreter: /usr/bin/python3
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        EOF
        
    - name: Test Ansible connection (check mode)
      env:
        ANSIBLE_HOST_KEY_CHECKING: 'False'
        ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
        ANSIBLE_PORT: ${{ secrets.ANSIBLE_PORT }}
      run: |
        echo "Running Ansible in check mode (dry run)..."
        ansible-playbook -i inventory/hosts.yml playbooks/site.yml --check -v || true
        
    - name: Test Summary
      if: always()
      run: |
        echo "════════════════════════════════════════════"
        echo "✓ Dry Run Test Completed"
        echo "════════════════════════════════════════════"
        echo "PR: #${{ github.event.pull_request.number }}"
        echo "Branch: ${{ github.head_ref }}"
        echo "════════════════════════════════════════════"
